name: 🚀 Git Action Logic for Push and PR

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: 🧑‍💻 Checkout Repository
      uses: actions/checkout@v4

    - name: 🔧 Set Up .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.x'

    - name: 📦 Restore Dependencies
      run: dotnet restore

    - name: 🏗️ Build Project
      run: dotnet build --configuration Release

    - name: 🖥️ Set up XVFB for Headless Browser
      run: |
        sudo apt-get install -y xvfb
        nohup Xvfb :99 -ac -screen 0 1280x1024x24 &

    - name: 🔐 Trust ASP.NET Core Developer Certificate
      run: dotnet dev-certs https --trust

    - name: 🌐 Install Playwright Browsers
      run: |
        npm install -g playwright
        npx playwright install

    - name: 🔧 Install Playwright CLI for .NET
      run: |
        dotnet tool install --global Microsoft.Playwright.CLI
        dotnet tool update --global Microsoft.Playwright.CLI
        playwright install
        
    - name: 🧪 Run Tests for InterviewAssistant.Common.Tests
      run: dotnet test test/InterviewAssistant.Common.Tests/InterviewAssistant.Common.Tests.csproj --no-build --logger "trx;LogFileName=common_tests.trx" --results-directory ./test-results
      continue-on-error: true

    - name: 🧪 Run Tests for InterviewAssistant.ApiService.Tests
      run: dotnet test test/InterviewAssistant.ApiService.Tests/InterviewAssistant.ApiService.Tests.csproj --no-build --logger "trx;LogFileName=apiservice_tests.trx" --results-directory ./test-results
      continue-on-error: true

    - name: 🧪 Run Tests for InterviewAssistant.Web.Tests
      run: dotnet test test/InterviewAssistant.Web.Tests/InterviewAssistant.Web.Tests.csproj --no-build --logger "trx;LogFileName=web_tests.trx" --results-directory ./test-results
      continue-on-error: true

    - name: 🧪 Run Tests for InterviewAssistant.AppHost.Tests
      run: dotnet test test/InterviewAssistant.AppHost.Tests/InterviewAssistant.AppHost.Tests.csproj --no-build --logger "trx;LogFileName=apphost_tests.trx" --results-directory ./test-results
      continue-on-error: true

    - name: 🔄 Convert Test Results to JUnit Format
      if: github.event_name == 'pull_request'
      run: |
        dotnet tool install --global trx2junit
        find ./test-results -name '*.trx' -exec trx2junit {} \;

    - name: 📑 Publish Test Results as PR Comment
      if: github.event_name == 'pull_request'
      uses: EnricoMi/publish-unit-test-result-action@v2
      with:
        files: '**/test-results/*.xml'
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: ✅ Add Check Comments for Failed Code Lines
      if: github.event_name == 'pull_request'
      uses: mikepenz/action-junit-report@v3
      with:
        report_paths: '**/test-results/*.xml'
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: 📦 Publish Project
      if: github.event_name == 'push'
      run: dotnet publish --configuration Release --output ./publish

    - name: 📤 Upload Published Artifact
      if: github.event_name == 'push'
      uses: actions/upload-artifact@v4
      with:
        name: published-app
        path: ./publish

  download-artifact:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'

    steps:
    - name: ⬇️ Download Published Artifact
      uses: actions/download-artifact@v4
      with:
        name: published-app
        path: ./downloaded-publish
